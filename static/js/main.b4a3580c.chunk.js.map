{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","query","filterBy","setQuery","setFilterBy","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","clearSelectedTodo","useState","user","setUser","isLoading","setIsLoading","errorMesage","setErrorMesage","useEffect","response","finally","userFromServer","catch","error","message","href","email","name","App","setTodos","preparedTodos","useMemo","filteredList","length","filter","toLowerCase","includes","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4a3580c.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={`${todo.completed ? 'has-text-success' : 'has-text-danger'}`}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              key={todo.id}\n              onClick={() => setSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={`far ${selectedTodo ? 'fa-eye-slash' : 'fa-eye'}`} />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  query: string,\n  filterBy: string,\n  setQuery: (query: string) => void,\n  setFilterBy: (filter: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  filterBy,\n  setQuery,\n  setFilterBy,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterBy}\n          onChange={(event) => setFilterBy(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo,\n  clearSelectedTodo: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  clearSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMesage, setErrorMesage] = useState<string>('');\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then((response) => setUser(response))\n      .finally(() => setIsLoading(false));\n  }, [selectedTodo]);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo?.userId)\n        .then(userFromServer => {\n          setUser(userFromServer);\n        })\n        .catch(error => {\n          setErrorMesage(error.message);\n        })\n        .finally(() => setIsLoading(false));\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && !user\n        && <Loader />}\n\n      {!isLoading && !errorMesage\n      && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={clearSelectedTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {!isLoading && user ? (\n                <span>\n                  {' by '}\n                  <a href={`mailto:${user.email}`}>\n                    {user.name}\n                  </a>\n                </span>\n              ) : (\n                'Author not found'\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterBy, setFilterBy] = useState<string>('');\n  const [query, setQuery] = useState<string>('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then((response) => setTodos(response))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const preparedTodos: Todo[] = useMemo(() => {\n    let filteredList: Todo[] = todos;\n\n    if (query.length) {\n      filteredList = filteredList.filter((todo) => {\n        return todo.title.toLowerCase().includes(query.toLowerCase());\n      });\n    }\n\n    switch (filterBy) {\n      case 'active':\n        return filteredList.filter(item => !item.completed);\n\n      case 'completed':\n        return filteredList.filter(item => item.completed);\n\n      default:\n        return filteredList;\n    }\n  }, [query, filterBy, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                filterBy={filterBy}\n                setQuery={setQuery}\n                setFilterBy={setFilterBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                todos={preparedTodos}\n                setSelectedTodo={setSelectedTodo}\n                selectedTodo={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          clearSelectedTodo={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}